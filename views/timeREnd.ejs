<%- include('bootheader') -%>
<%- include('menubar') -%>
<div class="jumbotron">
    <h1>Time has start recording.</h1>
    <p>Click the "end" button to end recording time!
       </p>
        <div class="spinner-grow text-primary" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-secondary" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-success" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-danger" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-warning" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-info" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-light" role="status">
          <span class="sr-only">Loading...</span>
        </div>
        <div class="spinner-grow text-dark" role="status">
          <span class="sr-only">Loading...</span>
        </div>
</div>

<form method="post" action="/processEnd">

  <input class="btn btn-lg btn-warning" type="submit" value="End">
</form>

<div>
<title>Simple Map</title>
<style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 100%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
</style>
<div id="map"></div>
<script>
  var map;
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 42.8, lng: -71.5},
      zoom: 8
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDtLEpQlxT1TB9yFkhfoPhJQB5nxzMEJQg&callback=initMap"
async defer></script>
</div>


<br>
<label id="lat">latitude</label><br>
<label id="lon">longitude</label><br>
<label id="d">last update</label><br>
<script>

  function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
  var R = 6371; // Radius of the earth in km
  var dLat = deg2rad(lat2-lat1);  // deg2rad below
  var dLon = deg2rad(lon2-lon1);
  var a =
    Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
    Math.sin(dLon/2) * Math.sin(dLon/2)
    ;
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  var d = R * c; // Distance in km
  return d;
}

function deg2rad(deg) {
  return deg * (Math.PI/180)
}
  var id, target, options;

function success(pos) {
  var crd = pos.coords;
  console.log("success "+new Date())
  document.getElementById('lat').innerHTML = crd.latitude
  document.getElementById('lon').innerHTML = crd.longitude
  document.getElementById('d').innerHTML = new Date()

  if (target.latitude){
    // check to see if you've moved from target
    if (getDistanceFromLatLonInKm(target.latitude,target.longitude,crd.latitude,crd.longitude)>0) {
      window.location =
        window.location+"/BadSleeper/"+
        target.latitude+"/"+target.longitude+"/"+
        crd.latitude+"/"+crd.longitude
    }
  } else {
    target.latitude = crd.latitude
    target.longitude = crd.longitude
  }

  if (target.latitude === crd.latitude && target.longitude === crd.longitude) {
    console.log('Congratulations, you reached the target');
    navigator.geolocation.clearWatch(id);
  }
}

function error(err) {
  console.warn('ERROR(' + err.code + '): ' + err.message);
}

target = {};

options = {
  enableHighAccuracy: false,
  timeout: 5000,
  maximumAge: 0
};

id = navigator.geolocation.watchPosition(success, error, options);
</script>

<%- include('bootfooter') -%>
